version: '3.8'

services:
  frontend:
    build: ./frontend
    networks:
      - default
    labels:
      - "traefik.enable=false"
    restart: unless-stopped
    expose:
      - 80
  backend:
    build:
      context: ./backend
    command: /home/app/web/start.sh
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    depends_on:
      - db
    networks:
      - default
    labels:
      - "traefik.enable=false"
    env_file:
      - ./.env
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.db
    networks:
      - default
    labels:
      - "traefik.enable=false"
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    #ports:
    #  - 1339:80
    depends_on:
      - backend
      - frontend
    networks:
      - web
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chores.rule=Host(`chores.danielleandjohn.love`)"
      - "traefik.http.routers.chores.entrypoints=websecure"
      - "traefik.http.services.chores.loadbalancer.server.port=80"
      - "traefik.http.routers.chores.service=chores"
      - "traefik.http.routers.chores.tls.certresolver=myresolver"
      - "traefik.http.routers.chores.middlewares=authelia,secure-headers@file,rate-limit@file,restrict-access@file"
      - "traefik.docker.network=web"

networks:
  web:
    name: web
    external: true

volumes:
  postgres_data:
  static_volume:
  media_volume: